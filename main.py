# < –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ >

import random

import telebot
from telebot.types import KeyboardButton

from config import *
from database import Database

# < –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã >

bot = telebot.TeleBot(TOKEN, parse_mode='Markdown')
db = Database(DB_PATH)

interests = db.get_all_categories()
interests_dict = {name.lower(): id for id, name in interests}

start_commands = ['/start', '–ø—Ä–∏–≤–µ—Ç', '–∫—Ç–æ —Ç—ã?', '–∫—Ç–æ —Ç—ã', '—Å—Ç–∞—Ä—Ç']

select_interests_commands = [
    '/add', '–≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', '–≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚öôÔ∏è', '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏']

help_commands = ['/help', '–ø–æ–º–æ—â—å üíä', '–ø–æ–º–æ–≥–∏ –º–Ω–µ',
                 '–ø–æ–º–æ–≥–∏', '–∫–∞–∫ —Å —Ç–æ–±–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å', '—á—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å']

get_info_commands = ['/info', '—É–∑–Ω–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëÄ',
                     '–∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                     '—Ñ–∞–∫—Ç—ã', '–ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç—ã']

reset_commands = ['/reset', '—Å–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', '—Å–±—Ä–æ—Å–∏—Ç—å']

admins_commands = ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
          ¬ß         '–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                   '–î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                   '–£–¥–∞–ª–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                   '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                   '–°–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', '–ù–∞–∑–∞–¥']


# < Callback - –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ >


@bot.message_handler(commands=['start'])
def start_bot(message):
    log.info(f'Start chatting with ({message.from_user.username})')

    if not db.is_user_in_db(message.from_user.username):
        keyboard = get_main_keyboard()
        bot.send_message(message.chat.id,
                         f'*–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.username}!* üôÉ  '
                         f'\n\n–Ø —Å–º–æ—Ç—Ä—é, –í—ã –∑–¥–µ—Å—å –ø–µ—Ä–≤—ã–π —Ä–∞–∑.\n '>>
                         f'–î–∞–≤–∞–π—Ç–µ —è –í–∞–º –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∂—É! \n\n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π '
                         f'–ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –í–∞—Å –Ω–∞ '
                         f'–æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. \n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –º–Ω–µ –Ω—É–∂–Ω–æ '
                         f'—É–∑–Ω–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–æ—á–∫–∏ –ø–æ–¥ —á–∞—Ç–æ–º, '
                         f'—á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é. \n–ü–æ—Å–ª–µ '
                         f'–≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –í–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞–∂–º–∏—Ç–µ '
                         f'–∫–Ω–æ–ø–∫—É "–ó–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–±–æ—Ä", —á—Ç–æ–±—ã —è –Ω–∞—á–∞–ª –≤–∞–º '
                         f'–≤—ã–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. \n\n–¢–∞–∫–∂–µ '
                         f'–ø–µ—Ä–µ—á–∏—Å–ª—è—é –Ω–∏–∂–µ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n1. /info - –í—ã–¥–∞—Ç—å '
                         f'–∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é \n2. /add - –î–æ–±–∞–≤–∏—Ç—å '
                         f'–∏–Ω—Ç–µ—Ä–µ—Å—ã\n3. /help - –ü–æ–º–æ—â—å\n4. /reset - '
                         f'–ü–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã\n 5. /admin - '
                         f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
                         reply_markup=keyboard)

        db.add_user(message.from_user.username)
    else:
        send_main_message(message)


@bot.message_handler(commands=['help'])
def get_help_bot(message):
    log.info(f'Send help to ({message.from_user.username})')

    bot.send_message(message.chat.id,
                     '–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é '
                     '–¥–ª—è –í–∞—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.\n–Ø –æ–±–ª–∞–¥–∞—é '
                     '—Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:\n1. /start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n2. '
                     '/help - –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É\n3. /info - –í—ã–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é '
                     '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n4. /reset - –ü–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã \n5. '
                     '/admin ‚Äì –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ')


@bot.message_handler(commands=['reset'])
def reset_categories_bot(message):
    log.info(f'Reset categories of ({message.from_user.username})')

    db.remove_all_categories(message.from_user.username)
    db.remove_user_info_provided(message.from_user.username)

    bot.send_message(message.chat.id, '–í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã!')


@bot.message_handler(commands=['add'])
def select_categories_bot(message):
    categories = db.get_no_user_categories(message.from_user.username)
    if len(categories) > 0:
        keyboard = get_keybord_with_categories(categories)
        bot.send_message(
            message.chat.id,
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –í–∞–º –ø–æ–¥—Ö–æ–¥—è—Ç, –Ω–∞–∂–∏–º–∞—è '
            '–Ω–∞ –∫–Ω–æ–ø–∫–∏.',
            reply_markup=keyboard)
    else:
        send_all_categories_added(message)


@bot.message_handler(commands=['admin'])
def show_admin_panel(message):
    keyboard = get_admin_keyboard()
    bot.send_message(
        message.chat.id,
        '–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.',
        reply_markup=keyboard)


@bot.message_handler(commands=['info'])
def get_info_bot(message):
    log.info(f'Send some info to ({message.from_user.username})')

    info = get_list_info(message.from_user.username)
    no_shown = [i for i in info if not i[2]]

    if len(no_shown):
        info_id = no_shown[0][0]
    else:
        info_id = info[random.randint(0, len(info) - 1)][0]

    info = db.get_info(info_id)

    bot.send_message(
        message.chat.id, f'{info[0]}\n\n{info[1]}')

    db.insert_provided_info(message.from_user.username, info_id)


# < –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º >


def show_categories_admin(message):
    categories = db.get_all_categories()
    msg = '–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–∏–Ω–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è): \n\n'
    for idx, teg in enumerate(categories):
        msg += f'{idx+1}. {teg[1]}\n'
    bot.send_message(message.chat.id, msg)


def show_info_admin(message):
    info = db.get_all_info()
    msg = '–°–ø–∏—Å–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∏–Ω–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ç–µ–≥–∏): \n\n'
    for doc in info:
        tegs = ', '.join(doc[2])
        msg += f'{doc[0]}. {doc[1]} '
        if len(tegs) > 0:
            msg += f'({tegs}) \n'
        else:
            msg += '\n'
    bot.send_message(message.chat.id, msg)


def show_desc_of_info_admin(message):
    bot.send_message(
        message.chat.id,
        '–ù–∞–ø–∏—à–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å '
        '–æ–ø–∏—Å–∞–Ω–∏–µ. \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /break')
    bot.send_message(
        message.chat.id,
        '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ.')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_show_desc_of_info_admin)


def c_show_desc_of_info_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        if message.text.isdigit():
            desc = db.get_info_for_admin(int(message.text))[1]
            bot.send_message(message.chat.id, f'{desc}')
        else:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def add_info_admin(message):
    bot.send_message(message.chat.id,
                     '–î–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! \n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, '
                     '–µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π '
                     '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç–æ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã –ª–∏—à—å –æ–±–Ω–æ–≤–∏—Ç–µ '
                     '—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ '
                     '–∫–æ–º–∞–Ω–¥—É /break')
    bot.send_message(
        message.chat.id,
        '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_add_info_admin)


def c_add_info_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        try:
            title, desc = message.text.split('\n', maxsplit=1)
            db.add_info(title, desc)
            bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
        except Exception as e:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def add_category_user(message):
    is_added = db.add_user_category(
        message.from_user.username, interests_dict.get(message.text.lower()))
    if is_added:
        send_added_category_message(message)
    else:
        send_no_added_category_message(message.chat.id)


def add_category_admin(message):
    bot.send_message(
        message.chat.id,
        '–î–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é! \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ '
        '–∫–æ–º–∞–Ω–¥—É /break')
    bot.send_message(
        message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_add_category_admin)


def c_add_category_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        db.add_category(message.text)
        bot.send_message(
            message.chat.id, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def remove_info_admin(message):
    bot.send_message(
        message.chat.id,
        '–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è '
        '–Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /break')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_remove_info_admin)


def c_remove_info_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        if message.text.isdigit():
            db.remove_info(int(message.text))
            bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
        else:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def remove_category_admin(message):
    bot.send_message(
        message.chat.id,
        '–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è '
        '–Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /break')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_remove_category_admin)


def c_remove_category_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        if message.text.isdigit():
            remove_category_id = int(message.text) - 1
            categories = db.get_all_categories()
            if 0 <= remove_category_id < len(categories):
                db_category_id = categories[remove_category_id][0]
                db.remove_category(db_category_id)
                bot.send_message(
                    message.chat.id, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
            else:
                bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')
        else:
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def add_categories_to_info_admin(message):
    bot.send_message(
        message.chat.id,
        '–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä '
        '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–≤–æ–∏—Ç—å —Ñ–∞–∫—Ç—É. \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è '
        '–Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /break')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_add_categories_to_info_admin)


def c_add_categories_to_info_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        try:
            info_id, category_id = message.text.split(' ', 1)
            db.add_category_to_info(info_id, category_id)
            bot.send_message(
                message.chat.id, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
        except Exception as e:
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def reset_categories_of_info_admin(message):
    bot.send_message(
        message.chat.id,
        '–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å '
        '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏. \n–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /break')
    bot.register_next_step_handler_by_chat_id(
        message.chat.id, c_reset_categories_of_info_admin)


def c_reset_categories_of_info_admin(message):
    if message.text not in ['/break', '–ù–∞–∑–∞–¥']:
        if message.text.isdigit():
            db.reset_categories_of_info(int(message.text))
            bot.send_message(
                message.chat.id, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–∞ —É —Ñ–∞–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
        else:
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')
    else:
        bot.send_message(message.chat.id, '–î–µ–π—Å—Ç–≤–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!')


def send_main_message(message):
    keyboard = get_main_keyboard()
    bot.send_message(
        message.chat.id,
        '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π —Å –ø–æ–º–æ—â—å—é '
        '–∫–Ω–æ–ø–æ–∫.',
        reply_markup=keyboard)


def send_no_added_category_message(message):
    bot.send_message(message.chat.id, f'–í—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')


def send_added_category_message(message):
    keyboard = get_keybord_with_categories(
        db.get_no_user_categories(message.from_user.username))
    bot.send_message(
        message.chat.id,
        f'–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Äì {message.text}!\n–í—ã –º–æ–∂–µ—Ç–µ '
        f'–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ª–∏–±–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–∞—Ç–∏–µ–º '
        f'–∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".',
        reply_markup=keyboard)


def send_all_categories_added(message):
    bot.send_message(
        message.chat.id,
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏!\n–°–±—Ä–æ—Å—å—Ç–µ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ '
        '(/reset), —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏—Ö –∑–∞–Ω–æ–≤–æ.')


def send_error(message):
    bot.send_message(message.chat.id,
                     '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É! üôÅ\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '
                     '/help –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã.\n')


def get_main_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    main_list = ['–í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚öôÔ∏è', '–°–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
                 '–ü–æ–º–æ—â—å üíä', '–£–∑–Ω–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëÄ',
                 '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ']
    btns = [KeyboardButton(name) for name in main_list]
    keyboard.add(*btns)
    return keyboard


def get_keybord_with_categories(categories):
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    btns = [KeyboardButton(item[1]) for item in categories]
    btns.append(get_back_button())
    keyboard.add(*btns)
    return keyboard


def get_admin_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(True, row_width=2)
    _btns = [KeyboardButton(command) for command in admins_commands]
    keyboard.add(*_btns)
    return keyboard


def get_back_button():
    return KeyboardButton('–ù–∞–∑–∞–¥')


def get_list_info(username):
    unprovided = db.get_unprovided_info(username)
    provided = db.get_provided_info(username)

    result = []

    for id in unprovided:
        result.append((id, db.get_similarity_categories(username, id), False))

    for id in provided:
        result.append((id, db.get_similarity_categories(username, id), True))

    result.sort(key=lambda x: x[1], reverse=True)
    return result


# < –ú–∞—Å—Å–∏–≤: [–∫–æ–º–∞–Ω–¥—ã], —Ñ—É–Ω–∫—Ü–∏—è >


admin_triggers = [
    ('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', show_info_admin),
    ('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', show_categories_admin),
    ('–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', show_desc_of_info_admin),
    ('–î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', add_info_admin),
    ('–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', add_category_admin),
    ('–£–¥–∞–ª–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', remove_info_admin),
    ('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', remove_category_admin),
    ('–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', add_categories_to_info_admin),
    ('–°–±—Ä–æ—Å–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', reset_categories_of_info_admin),
    ('–ù–∞–∑–∞–¥', send_main_message)
]


@bot.message_handler(commands=['admin'])
def admin_panel_bot(message):
    text = message.text.lower()
    for command, func in admin_triggers:
        if text == command.lower():
            func(message)


triggers = [
    (start_commands, start_bot),
    (select_interests_commands, select_categories_bot),
    (help_commands, get_help_bot),
    (get_info_commands, get_info_bot),
    (reset_commands, reset_categories_bot),
    ([command.lower() for command in admins_commands], admin_panel_bot),
    (['–Ω–∞–∑–∞–¥'], send_main_message),
    (['–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'], show_admin_panel),
]


@bot.message_handler(content_types=['text'])
def process_triggers_bot(message):
    log.info(
        f'Got a message from ({message.from_user.username}) : ({message.text})')

    text = message.text.lower()

    for commands, func in triggers:
        if text in commands:
            func(message)
            return

    if interests_dict.get(text) is not None:
        add_category_user(message)
    else:
        send_error(message)


bot.polling()
